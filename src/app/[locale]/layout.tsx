import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import { NextIntlClientProvider, hasLocale } from 'next-intl';
import { notFound } from 'next/navigation';
import { routing } from '@/i18n/routing';
// import { ReactNode } from 'react';
import './globals.css';
import styles from './App.module.scss';
import {
  Header,
  Footer,
  ThemeSwitcher as ThemeProvider,
  Query,
  Response,
} from '@/components';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function LocaleLayout({
  // children,
  params,
}: {
  // children: ReactNode;
  params: Promise<{ locale: string }>;
}) {
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  return (
    <html lang={locale}>
      <ThemeProvider className={`${geistSans.variable} ${geistMono.variable}`}>
        <NextIntlClientProvider>
          <div className={styles.app}>
            <Header />
            <Query />
            <Response />
            <Query />
            <Response />
            <Query />
            <Response />
            <Query />
            <Response />
            {/* {children} */}
            <Footer />
          </div>
        </NextIntlClientProvider>
      </ThemeProvider>
    </html>
  );
}
